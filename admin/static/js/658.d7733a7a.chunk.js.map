{"version":3,"file":"static/js/658.d7733a7a.chunk.js","mappings":"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","sources":["assets/collection.js","views/name/addName.js","views/section/inputName.js","views/section/lodr.js"],"sourcesContent":["module.exports={\nport:'http://localhost:9000/',\n}","import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nvar xlsx = require('xlsx');\nimport { CForm, CRow, CFormLabel, CFormInput, CFormCheck, CButton, CCol } from '@coreui/react';\nimport collection from '../../assets/collection'\nimport Lodr from '../section/lodr';\nimport InputName from '../section/inputName';\n\nexport default function addName() {\n\n    // excel reader\n    const [data, setdata] = useState(null)\n    const [state, setstate] = useState(null);\n    const readUploadFile = () => {\n        if (state.target.files) {\n            const reader = new FileReader();\n            reader.onload = (state) => {\n                const data = state.target.result;\n                const workbook = xlsx.read(data, { type: \"array\" });\n                const sheetName = workbook.SheetNames[0];\n                const worksheet = workbook.Sheets[sheetName];\n                const json = xlsx.utils.sheet_to_json(worksheet);\n                setdata(json)\n            };\n            reader.readAsArrayBuffer(state.target.files[0]);\n        }\n    }\n\n\n    // states\n    const [progress, setprogress] = useState(false)\n\n    useEffect(() => {\n        if (data) {\n            setprogress(true)\n            submitHandler();\n        }\n    }, [data])\n\n\n    // Accept form data\n    const submitHandler = (event) => {\n        for (let i = 0; i < data.length; i++) {\n            var eth = [];\n            for (let j = 0; j < 100; j++) {\n                data[i][j] ? eth.push(data[i][j]) : null;\n            }\n            console.log(eth);\n            axios.post(collection.port + 'api/admin/addName', {\n                'name': data[i].Name, 'gender': data[i].Gender, 'meaning': data[i].Meaning, 'ethni': eth, 'like': 0\n            }).then(() => {})\n        }\n        alert(\"Names added successfully\")\n        setprogress(false)\n    }\n\n\n    return progress ? <Lodr /> :\n        <div>\n            <InputName edit={0} props={0}/>\n            <br /><br />\n            <form>\n                <label htmlFor=\"upload\">Upload Excel File</label>\n                <input onChange={(e)=>{setstate(e)}}\n                    type=\"file\"\n                    name=\"upload\"\n                    id=\"upload\"\n                />\n            <div><br/> <CButton color='success' onClick={readUploadFile}>Upload File</CButton></div>\n            </form>\n        </div>\n}\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { CForm, CRow, CFormLabel, CFormInput, CFormSelect, CButton, CCol, CInputGroup, CInputGroupText } from '@coreui/react';\nimport collection from '../../assets/collection'\nimport Lodr from '../section/lodr';\nimport {\n    cilCheck, cilX\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function inputName({ edit, props }) {\n    // states\n    const [progress, setprogress] = useState(true)\n    const [name, setname] = useState('');\n    const [meaning, setmeaning] = useState('');\n    const [ethi, setethi] = useState([]);\n    const [gender, setgender] = useState('');\n    const [_id, set_id] = useState('');\n    const [val, setval] = useState('');\n\n\n    const navigate = useNavigate();\n\n    const addHandler = () => {\n        val ? setethi(ethi => [...ethi, val]) : null\n        setval('')\n    }\n\n    useEffect(() => {\n        if (edit) {\n            setethi(props.data.ethni)\n            setname(props.data.name)\n            setgender(props.data.gender)\n            setmeaning(props.data.meaning)\n            set_id(props.data._id)\n            setprogress(false)\n        }\n        else {\n            setprogress(false)\n        }\n    }, [edit]);\n\n\n    // Accept form data\n    const submitHandler = () => {\n        if (edit) {\n            setprogress(true)\n            axios.post(collection.port + 'api/admin/editName', {\n                'name': name, 'gender': gender, 'meaning': meaning, 'ethni': ethi, 'like': 0, \"id\": _id,\n            }).then(() => {\n                alert(\"Names edited successfully\")\n                setprogress(false)\n                navigate(-1)\n            })\n        }\n        else {\n            setprogress(true)\n            axios.post(collection.port + 'api/admin/addName', {\n                'name': name, 'gender': gender, 'meaning': meaning, 'ethni': ethi, 'like': 0\n            }).then(() => {\n                alert(\"Name added successfully\")\n                resetHandler()\n                setprogress(false)\n            })\n        }\n    }\n\n    const resetHandler = () => {\n        setname('')\n        setgender('')\n        setmeaning('')\n        setethi([])\n        setgender('')\n    }\n    const deleteHandler = (props) => {\n        props ? setethi(ethi => ethi.filter(ethi => ethi !== props)) : null\n    }\n    return progress ? <Lodr /> : <CForm>\n        <CRow className=\"mb-3\">\n            <CFormLabel htmlFor=\"name\" className=\"col-sm-2 col-form-label\">Name</CFormLabel>\n            <CCol sm={10} >\n                <CFormInput required value={name} onChange={(e) => setname(e.target.value)} type=\"name\" id=\"name\" />\n            </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n            <CFormLabel htmlFor=\"meaning\" className=\"col-sm-2 col-form-label\">Meaning</CFormLabel>\n            <CCol sm={10} >\n                <CFormInput required value={meaning} onChange={(e) => setmeaning(e.target.value)} type=\"text\" id=\"meaning\" />\n            </CCol>\n        </CRow>\n        <fieldset className=\"row mb-3\">\n            <legend className=\"col-form-label col-sm-2 pt-0\">Gender</legend>\n            <CCol sm={5} >\n                <CFormSelect required size=\"sm\" value={gender} onChange={(e) => setgender(e.target.value)} className=\"mb-3\" aria-label=\"Small select example\">\n                    <option value=\"\">add New option</option>\n                    <option value=\"Boy\">Boy</option>\n                    <option value=\"Girl\">Girl</option>\n                    <option value=\"Unisex\">Unisex</option>\n                </CFormSelect>\n            </CCol>\n        </fieldset>\n\n\n        <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"ethnic\" className=\"col-sm-2 col-form-label\">Ethnic</CFormLabel>\n            {ethi ? ethi.map((data, index) => <span key={index}>{data}  <CIcon style={{ cursor: 'pointer', color: 'red' }} onClick={(e) => deleteHandler(data)} icon={cilX} /> , </span>) : null}\n            <CInputGroup size='sm' className=\"mt-3 mb-3\">\n                <CFormInput  placeholder='add new value' value={val} onChange={(e) => setval(e.target.value)} type=\"text\"  />\n                <CInputGroupText style={{ cursor: 'pointer' }} onClick={addHandler}>Click to add <CIcon icon={cilCheck}></CIcon></CInputGroupText>\n            </CInputGroup>\n        </div>\n\n\n\n        {edit ? <CButton color='success' onClick={submitHandler} >Update</CButton> : name && meaning && gender ? <CButton onClick={submitHandler} color='success' >Upload</CButton> : <CButton color='success' >Upload</CButton>}\n        <span style={{ paddingLeft: '100px' }}> <CButton color='primary' onClick={resetHandler} >Reset</CButton></span>\n\n    </CForm>\n}\n","import React from 'react'\nimport lodr from '../../assets/lodr.gif'\n\nexport default function loader() {\n  return (\n    <img style={{height:'100px',width:'auto'}} src={lodr} alt='lodr'/>\n  )\n}\n"],"names":["module","exports","port","xlsx","require","addName","useState","data","setdata","state","setstate","progress","setprogress","useEffect","submitHandler","event","i","length","eth","j","push","console","log","axios","collection","Name","Gender","Meaning","then","alert","edit","props","htmlFor","onChange","e","type","name","id","color","onClick","target","files","reader","FileReader","onload","result","workbook","read","sheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","readAsArrayBuffer","inputName","setname","meaning","setmeaning","ethi","setethi","gender","setgender","_id","set_id","val","setval","navigate","useNavigate","ethni","resetHandler","className","sm","required","value","size","map","index","style","cursor","filter","deleteHandler","icon","cilX","placeholder","cilCheck","paddingLeft","loader","height","width","src","lodr","alt"],"sourceRoot":""}