{"version":3,"file":"static/js/144.b1dd2c1b.chunk.js","mappings":"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","sources":["assets/collection.js","views/name/editName.js","views/section/inputName.js","views/section/lodr.js","../node_modules/@coreui/icons/js/free/cil-check.js","../node_modules/@coreui/icons/js/free/cil-x.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["module.exports={\nport:'http://localhost:9000/',\n}","import React, { useEffect, useState } from 'react'\nimport {useParams} from 'react-router-dom'\nimport axios from 'axios'\nimport InputName from '../section/inputName';\nimport Loader from '../section/lodr';\nimport collection from '../../assets/collection';\n\nexport default function editName() {\n  const{id}=useParams()\n  const [Details, setDetails] = useState(null)\n  useEffect(() => {\n      axios.get(collection.port+'api/admin/getName/'+id).then((res) => {\n          setDetails(res);  \n      })\n  }, [])\n  return  Details ?  <InputName edit={true} props={Details}/>:<Loader/>\n}","import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { CForm, CRow, CFormLabel, CFormInput, CFormSelect, CButton, CCol, CInputGroup, CInputGroupText } from '@coreui/react';\nimport collection from '../../assets/collection'\nimport Lodr from '../section/lodr';\nimport {\n    cilCheck, cilX\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function inputName({ edit, props }) {\n    // states\n    const [progress, setprogress] = useState(true)\n    const [name, setname] = useState('');\n    const [meaning, setmeaning] = useState('');\n    const [ethi, setethi] = useState([]);\n    const [gender, setgender] = useState('');\n    const [_id, set_id] = useState('');\n    const [val, setval] = useState('');\n\n\n    const navigate = useNavigate();\n\n    const addHandler = () => {\n        val ? setethi(ethi => [...ethi, val]) : null\n        setval('')\n    }\n\n    useEffect(() => {\n        if (edit) {\n            setethi(props.data.ethni)\n            setname(props.data.name)\n            setgender(props.data.gender)\n            setmeaning(props.data.meaning)\n            set_id(props.data._id)\n            setprogress(false)\n        }\n        else {\n            setprogress(false)\n        }\n    }, [edit]);\n\n\n    // Accept form data\n    const submitHandler = () => {\n        if (edit) {\n            setprogress(true)\n            axios.post(collection.port + 'api/admin/editName', {\n                'name': name, 'gender': gender, 'meaning': meaning, 'ethni': ethi, 'like': 0, \"id\": _id,\n            }).then(() => {\n                alert(\"Names edited successfully\")\n                setprogress(false)\n                navigate(-1)\n            })\n        }\n        else {\n            setprogress(true)\n            axios.post(collection.port + 'api/admin/addName', {\n                'name': name, 'gender': gender, 'meaning': meaning, 'ethni': ethi, 'like': 0\n            }).then(() => {\n                alert(\"Name added successfully\")\n                resetHandler()\n                setprogress(false)\n            })\n        }\n    }\n\n    const resetHandler = () => {\n        setname('')\n        setgender('')\n        setmeaning('')\n        setethi([])\n        setgender('')\n    }\n    const deleteHandler = (props) => {\n        props ? setethi(ethi => ethi.filter(ethi => ethi !== props)) : null\n    }\n    return progress ? <Lodr /> : <CForm>\n        <CRow className=\"mb-3\">\n            <CFormLabel htmlFor=\"name\" className=\"col-sm-2 col-form-label\">Name</CFormLabel>\n            <CCol sm={10} >\n                <CFormInput required value={name} onChange={(e) => setname(e.target.value)} type=\"name\" id=\"name\" />\n            </CCol>\n        </CRow>\n        <CRow className=\"mb-3\">\n            <CFormLabel htmlFor=\"meaning\" className=\"col-sm-2 col-form-label\">Meaning</CFormLabel>\n            <CCol sm={10} >\n                <CFormInput required value={meaning} onChange={(e) => setmeaning(e.target.value)} type=\"text\" id=\"meaning\" />\n            </CCol>\n        </CRow>\n        <fieldset className=\"row mb-3\">\n            <legend className=\"col-form-label col-sm-2 pt-0\">Gender</legend>\n            <CCol sm={5} >\n                <CFormSelect required size=\"sm\" value={gender} onChange={(e) => setgender(e.target.value)} className=\"mb-3\" aria-label=\"Small select example\">\n                    <option value=\"\">add New option</option>\n                    <option value=\"Boy\">Boy</option>\n                    <option value=\"Girl\">Girl</option>\n                    <option value=\"Unisex\">Unisex</option>\n                </CFormSelect>\n            </CCol>\n        </fieldset>\n\n\n        <div className=\"mb-3\">\n            <CFormLabel htmlFor=\"ethnic\" className=\"col-sm-2 col-form-label\">Ethnic</CFormLabel>\n            {ethi ? ethi.map((data, index) => <span key={index}>{data}  <CIcon style={{ cursor: 'pointer', color: 'red' }} onClick={(e) => deleteHandler(data)} icon={cilX} /> , </span>) : null}\n            <CInputGroup size='sm' className=\"mt-3 mb-3\">\n                <CFormInput  placeholder='add new value' value={val} onChange={(e) => setval(e.target.value)} type=\"text\"  />\n                <CInputGroupText style={{ cursor: 'pointer' }} onClick={addHandler}>Click to add <CIcon icon={cilCheck}></CIcon></CInputGroupText>\n            </CInputGroup>\n        </div>\n\n\n\n        {edit ? <CButton color='success' onClick={submitHandler} >Update</CButton> : name && meaning && gender ? <CButton onClick={submitHandler} color='success' >Upload</CButton> : <CButton color='success' >Upload</CButton>}\n        <span style={{ paddingLeft: '100px' }}> <CButton color='primary' onClick={resetHandler} >Reset</CButton></span>\n\n    </CForm>\n}\n","import React from 'react'\nimport lodr from '../../assets/lodr.gif'\n\nexport default function loader() {\n  return (\n    <img style={{height:'100px',width:'auto'}} src={lodr} alt='lodr'/>\n  )\n}\n","export const cilCheck = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M199.066,456l-7.379-7.514-3.94-3.9-86.2-86.2.053-.055L17.936,274.665l97.614-97.613,83.565,83.565L398.388,61.344,496,158.958,296.729,358.229,285.469,369.6ZM146.6,358.183l52.459,52.46.1-.1.054.054,52.311-52.311,11.259-11.368L450.746,158.958,398.388,106.6,199.115,305.871,115.55,222.306,63.191,274.665l83.464,83.463Z' class='ci-primary'/>\"]","export const cilX = [\"512 512\",\"<polygon fill='var(--ci-primary-color, currentColor)' points='427.314 107.313 404.686 84.687 256 233.373 107.314 84.687 84.686 107.313 233.373 256 84.686 404.687 107.314 427.313 256 278.627 404.686 427.313 427.314 404.687 278.627 256 427.314 107.313' class='ci-primary'/>\"]","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["module","exports","port","editName","id","useParams","useState","Details","setDetails","useEffect","axios","collection","then","res","edit","props","inputName","progress","setprogress","name","setname","meaning","setmeaning","ethi","setethi","gender","setgender","_id","set_id","val","setval","navigate","useNavigate","data","ethni","submitHandler","alert","resetHandler","className","htmlFor","sm","required","value","onChange","e","target","type","size","map","index","style","cursor","color","onClick","filter","deleteHandler","icon","cilX","placeholder","cilCheck","paddingLeft","loader","height","width","src","lodr","alt","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}